<?php
/**
 * This source file is part of GotCms.
 *
 * GotCms is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * GotCms is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along
 * with GotCms. If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.
 *
 * PHP Version >=5.3
 *
 * @category Gc_Tests
 * @package  Datatypes
 * @author   Pierre Rambaud (GoT) <pierre.rambaud86@gmail.com>
 * @license  GNU/LGPL http://www.gnu.org/licenses/lgpl-3.0.html
 * @link     http://www.got-cms.com
 */

namespace Datatypes\Mixed;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-10-17 at 20:42:12.
 *
 * @group Datatypes
 * @category Gc_Tests
 * @package  Datatypes
 */
class EditorTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Editor
     *
     * @return void
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @return void
     */
    protected function setUp()
    {
        $this->property = $this->getMock(
            'Gc\Property\Model',
            array(
                'getName',
                'getId',
                'getValue',
                'getConfig',
            )
        );
        $this->property->expects($this->any())
            ->method('getName')
            ->will($this->returnValue('name'));
        $this->property->expects($this->any())
            ->method('getId')
            ->will($this->returnValue(1));

        $datatype = $this->getMock(
            'Datatypes\Mixed\Datatype',
            array(
                'getName',
                'getProperty',
                'getConfig',
                'getDocument',
                'getUploadUrl',
                'getDatatypeModel',
                'getHelperBroker',
            )
        );
        $datatype->expects($this->any())
            ->method('getName')
            ->will($this->returnValue('name'));
        $datatype->expects($this->any())
            ->method('getProperty')
            ->will($this->returnValue($this->property));
        $datatype->expects($this->any())
            ->method('getUploadUrl')
            ->will($this->returnValue(''));
        $datatype->expects($this->any())
            ->method('getDatatypeModel')
            ->will($this->returnSelf());
        $viewHelperManager = $this->getMock( 'Zend\View\HelperPluginManager', array(), array(), '', false);
        $datatype->expects($this->any())
            ->method('getHelperBroker')
            ->will($this->returnValue($viewHelperManager));

        $datatype->expects($this->any())
            ->method('getConfig')
            ->will($this->returnValue(
                array (
                    'datatypes' =>
                    array (
                        0 =>
                        array (
                            'name' => 'Textstring',
                            'label' => 'Test',
                            'config' => array (
                                'length' => '',
                            ),
                        ),
                    ),
                )
            ));

        $document = $this->getMock('Gc\Document\Model', array('getId'));
        $document->expects($this->any())
            ->method('getId')
            ->will($this->returnValue(1));
        $datatype->expects($this->any())
            ->method('getDocument')
            ->will($this->returnValue($document));


        $this->object = new Editor($datatype);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @return void
     */
    protected function tearDown()
    {
        $_FILES = array();
        $_POST  = array();
        unset($this->object);
    }

    /**
     * Test
     *
     * @covers Datatypes\Mixed\Editor::save
     * @covers Datatypes\Mixed\Editor::loadDatatype
     *
     * @return void
     */
    public function testSave()
    {
        $this->property->expects($this->any())
            ->method('getValue')
            ->will($this->returnValue(
                serialize(
                    array(
                        array(
                            'value' => __DIR__ . '/_files/test.jpg',
                        )
                    )
                )
            ));

        $post = $this->object->getRequest()->getPost();
        $post->set(
            'name1',
            array(
                array(
                    array(
                        'textstring51' => 'test1',
                    ),
                ), array(
                    array(
                        'textstring51' => 'test2',
                    ),
                ),
            )
        );

        $_FILES = array(
            'name1' => array(
                'name' => array(
                    array(
                        array(
                            'textstring51' => array(
                                __DIR__ . '/test',
                            ),
                        ),
                    ),
                ),
                'type' => array(
                    array(
                        array(
                            'textstring51' => array(
                                'plain/text',
                            ),
                        ),
                    ),
                ),
                'size' => array(
                    array(
                        array(
                            'textstring51' => array(
                                8,
                            ),
                        ),
                    ),
                ),
                'tmp_name' => array(
                    array(
                        array(
                            'textstring51' => array(
                                __DIR__ . '/test',
                            ),
                        ),
                    ),
                ),
                'error' => array(
                    array(
                        array(
                            'textstring51' => array(
                                0,
                            ),
                        ),
                    ),
                ),
            ),
        );

        $this->object->save();
        $this->assertEquals(
            'a:1:{i:0;a:1:{s:5:"value";s:65:"/var/www/gotcms/www/tests/library/Datatypes/Mixed/_files/test.jpg";}}',
            $this->object->getValue()
        );
    }

    /**
     * Test
     *
     * @covers Datatypes\Mixed\Editor::load
     * @covers Datatypes\Mixed\Editor::loadDatatype
     *
     * @return void
     */
    public function testLoad()
    {
        $this->property->expects($this->any())
            ->method('getValue')
            ->will($this->returnValue('a:3:{i:0;a:1:{i:0;a:1:{s:5:"value";s:5:"test1";}}i:1;a:1:{i:0;a:0:{}}i:3;a:1:{i:25;a:0:{}}}'
            ));
        $this->assertInternalType('string', $this->object->load());
    }
}
