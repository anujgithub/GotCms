<?php
/**
 * This source file is part of GotCms.
 *
 * GotCms is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * GotCms is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along
 * with GotCms. If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.
 *
 * PHP Version >=5.3
 *
 * @category Gc_Tests
 * @package  Modules
 * @author   Pierre Rambaud (GoT) <pierre.rambaud86@gmail.com>
 * @license  GNU/LGPL http://www.gnu.org/licenses/lgpl-3.0.html
 * @link     http://www.got-cms.com
 */

namespace Modules\Blog\Controller;

use Modules\Blog\Bootstrap;
use Gc\Document\Model as DocumentModel;
use Gc\DocumentType\Model as DocumentTypeModel;
use Gc\Layout\Model as LayoutModel;
use Gc\User\Model as UserModel;
use Gc\View\Model as ViewModel;
use Gc\Registry;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-12-06 at 14:00:49.
 *
 * @group Modules
 * @category Gc_Tests
 * @package  Modules
 */
class IndexControllerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var IndexController
     *
     * @return void
     */
    protected $object;

    /**
     * @var Bootstrap
     *
     * @return void
     */
    protected $boostrap;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @return void
     */
    protected function setUp()
    {
        $this->boostrap = new Bootstrap();
        $this->boostrap->install();
        $this->object = new IndexController(
            Registry::get('Application')->getRequest(),
            Registry::get('Application')->getResponse()
        );
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @return void
     */
    protected function tearDown()
    {
        unset($this->object);
    }

    /**
     * Test
     *
     * @covers Modules\Blog\Controller\IndexController::indexAction
     *
     * @return void
     */
    public function testIndexAction()
    {
        $this->assertInternalType('array', $this->object->indexAction());
    }

    /**
     * Test
     *
     * @covers Modules\Blog\Controller\IndexController::documentCommentAction
     *
     * @return void
     */
    public function testDocumentCommentActionWithRedirect()
    {
        $this->setExpectedException('Zend\Mvc\Exception\DomainException');
        $this->assertInternalType('array', $this->object->documentCommentAction());
    }

    /**
     * Test
     *
     * @covers Modules\Blog\Controller\IndexController::documentCommentAction
     *
     * @return void
     */
    public function testDocumentComment()
    {
        Registry::get('Application')->getRequest()->getQuery()->set('id', $this->document->getId());
        $this->assertInternalType('array', $this->object->documentCommentAction());
    }

    /**
     * Test
     *
     * @covers Modules\Blog\Controller\IndexController::documentCommentAction
     *
     * @return void
     */
    public function testDocumentCommentWithPostData()
    {
        $this->setExpectedException('Zend\Mvc\Exception\DomainException');
        $request = Registry::get('Application')->getRequest();
        $request->setMethod('POST');
        $request->getQuery()->set('id', $this->document->getId());

        $post = $request->getPost();

        $post->set(
            'comment',
            array(
                '1' => array(
                    'delete' => true
                ),
                '2' => array(
                    'message' => true,
                    'wrong-name' => false
                ),
            )
        );

        $this->assertNUll($this->object->documentCommentAction());

        $request->setMethod('GET');
    }
}
