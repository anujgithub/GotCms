<?php
/**
 * This source file is part of GotCms.
 *
 * GotCms is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * GotCms is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along
 * with GotCms. If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.
 *
 * PHP Version >=5.3
 *
 * @category Gc_Tests
 * @package  Library
 * @author   Pierre Rambaud (GoT) <pierre.rambaud86@gmail.com>
 * @license  GNU/LGPL http://www.gnu.org/licenses/lgpl-3.0.html
 * @link     http://www.got-cms.com
 */

namespace Gc\Component;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-10-17 at 20:40:09.
 *
 * @group Gc
 * @category Gc_Tests
 * @package  Library
 */
class TabsTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Tabs
     *
     * @return void
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @covers Gc\Component\Tabs::__construct
     *
     * @return void
     */
    protected function setUp()
    {
        $this->object = new Tabs(array());
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @return void
     */
    protected function tearDown()
    {
        unset($this->object);
    }

    /**
     * Test
     *
     * @covers Gc\Component\Tabs::render
     *
     * @return void
     */
    public function testRenderWithIterableInterface()
    {
        $document = $this->getMock('Gc\Document\Model');
        $this->assertEquals(
            sprintf(
                '<ul><li><a href="#tabs-%d">Document name</a></li></ul>',
                $document->getId()
            ),
            $this->object->render(array($document))
        );
    }

    /**
     * Test
     *
     * @covers Gc\Component\Tabs::render
     *
     * @return void
     */
    public function testRenderWithParams()
    {
        $this->assertEquals('<ul><li><a href="#tabs-1">string</a></li></ul>', $this->object->render(array('string')));
    }

    /**
     * Test
     *
     * @covers Gc\Component\Tabs::render
     *
     * @return void
     */
    public function testRenderWithoutParams()
    {
        $this->object->setData(array('string'));
        $this->assertEquals('<ul><li><a href="#tabs-1">string</a></li></ul>', $this->object->render());
    }

    /**
     * Test
     *
     * @covers Gc\Component\Tabs::__toString
     *
     * @return void
     */
    public function testToStringWithEmptyData()
    {
        $this->object->setData(array());
        $this->assertFalse($this->object->__toString());
    }

    /**
     * Test
     *
     * @covers Gc\Component\Tabs::__toString
     *
     * @return void
     */
    public function testToStringWithoutEmptyData()
    {
        $this->object->setData(array('string'));
        $this->assertEquals('<ul><li><a href="#tabs-1">string</a></li></ul>', $this->object->__toString());
    }

    /**
     * Test
     *
     * @covers Gc\Component\Tabs::setData
     *
     * @return void
     */
    public function testSetData()
    {
        $this->object->setData(array('string'));
        $this->assertEquals('<ul><li><a href="#tabs-1">string</a></li></ul>', $this->object->__toString());
    }
}
