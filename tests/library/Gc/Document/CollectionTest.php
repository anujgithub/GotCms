<?php
/**
 * This source file is part of GotCms.
 *
 * GotCms is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * GotCms is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along
 * with GotCms. If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.
 *
 * PHP Version >=5.3
 *
 * @category Gc_Tests
 * @package  Library
 * @author   Pierre Rambaud (GoT) <pierre.rambaud86@gmail.com>
 * @license  GNU/LGPL http://www.gnu.org/licenses/lgpl-3.0.html
 * @link     http://www.got-cms.com
 */

namespace Gc\Document;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-10-17 at 20:40:09.
 *
 * @group Gc
 * @category Gc_Tests
 * @package  Library
 */
class CollectionTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Collection
     *
     * @return void
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @return void
     */
    protected function setUp()
    {
        $this->object = new Collection;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @return void
     */
    protected function tearDown()
    {
        unset($this->object);
    }

    /**
     * Test
     *
     * @covers Gc\Document\Collection::load
     * @covers Gc\Document\Collection::setDocuments
     *
     * @return void
     */
    public function testLoad()
    {
        $this->object->load(0);
        $this->assertInternalType('array', $this->object->getDocuments());
    }

    /**
     * Test
     *
     * @covers Gc\Document\Collection::load
     * @covers Gc\Document\Collection::setDocuments
     *
     * @return void
     */
    public function testLoadWithParentId()
    {
        $this->object->load($this->document->getId());
        $this->assertInternalType('array', $this->object->getDocuments());
    }

    /**
     * Test
     *
     * @covers Gc\Document\Collection::getAvailableDocuments
     *
     * @return void
     */
    public function testGetAvailableDocuments()
    {
        $this->assertInternalType('array', $this->object->getAvailableDocuments());
    }

    /**
     * Test
     *
     * @covers Gc\Document\Collection::getSelect
     *
     * @return void
     */
    public function testGetSelect()
    {
        $this->object->load(0);
        $this->assertInternalType('array', $this->object->getSelect());
    }

    /**
     * Test
     *
     * @covers Gc\Document\Collection::getParent
     *
     * @return void
     */
    public function testGetParent()
    {
        $this->object->load(0);
        $this->assertFalse($this->object->getParent());
    }

    /**
     * Test
     *
     * @covers Gc\Document\Collection::getChildren
     *
     * @return void
     */
    public function testGetChildren()
    {
        $this->object->load(0);
        $this->assertInternalType('array', $this->object->getChildren());
    }

    /**
     * Test
     *
     * @covers Gc\Document\Collection::getAvailableChildren
     *
     * @return void
     */
    public function testGetAvailableChilren()
    {
        $this->object->load(0);
        $this->assertInternalType('array', $this->object->getAvailableChildren());
    }

    /**
     * Test
     *
     * @covers Gc\Document\Collection::getId
     *
     * @return void
     */
    public function testGetId()
    {
        $this->assertFalse($this->object->getId());
    }

    /**
     * Test
     *
     * @covers Gc\Document\Collection::getIcon
     *
     * @return void
     */
    public function testGetIcon()
    {
        $this->assertEquals('folder', $this->object->getIcon());
    }

    /**
     * Test
     *
     * @covers Gc\Document\Collection::getIterableId
     *
     * @return void
     */
    public function testGetIterableId()
    {
        $this->assertEquals('documents', $this->object->getIterableId());
    }

    /**
     * Test
     *
     * @covers Gc\Document\Collection::getName
     *
     * @return void
     */
    public function testGetName()
    {
        $this->assertEquals('Website', $this->object->getName());
    }

    /**
     * Test
     *
     * @covers Gc\Document\Collection::getEditUrl
     *
     * @return void
     */
    public function testGetEditUrl()
    {

        $this->assertNull($this->object->getEditUrl());
    }
}
